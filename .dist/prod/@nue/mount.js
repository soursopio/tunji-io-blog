var I=((k)=>typeof require!=="undefined"?require:typeof Proxy!=="undefined"?new Proxy(k,{get:(q,z)=>(typeof require!=="undefined"?require:q)[z]}):k)(function(k){if(typeof require!=="undefined")return require.apply(this,arguments);throw Error('Dynamic require of "'+k+'" is not supported')});async function K(k){const q=document.querySelector('[name="nue:components"]')?.getAttribute("content");if(!q)return[];const z=[];for(let w of q.split(" ")){if(w==k)w+=`?${++J}`;const{lib:B}=await import(w);if(B)z.push(...B)}return z}async function M(){const k=document.querySelectorAll("[is]"),q=k[0]?await K():[];if(!q[0])return;const{createApp:z}=await import("./nue.js");for(let w of[...k]){const B=w.getAttribute("is"),F=w.nextElementSibling,H=F?.type=="application/json"?JSON.parse(F.textContent):{},G=q.find((C)=>C.name==B);if(G){const C=z(G,H,q).mount(w);D.push(C)}else if(customElements.get(B));}}async function O(){D.forEach((k)=>k.unmount()),D=[]}var D=[],J=0;addEventListener("route",()=>M());addEventListener("DOMContentLoaded",()=>dispatchEvent(new Event("route")));export{O as unmountAll,M as mountAll};
